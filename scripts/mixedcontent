#!/usr/bin/env python3
from argparse import ArgumentParser
from concurrent.futures import ThreadPoolExecutor
from functools import partial
from typing import List

import mixedcontent.core as mc

parser = ArgumentParser()
parser.add_argument('domain')
parser.add_argument('sitemap_url')
parser.add_argument('--threads', type=int, default=1)


def chunks(li: List[str], n: int):
    for i in range(0, len(li), n):
        yield li[i:i + n]


if __name__ == '__main__':
    args = parser.parse_args()

    urls = mc.parse_sitemap(args.domain, args.sitemap_url)

    if args.threads == 1:
        driver = mc.start_selenium_server()
        for url in urls:
            mc.check_for_mixed_content(driver, url)
    else:
        funcs = (partial(mc.check_for_mixed_content, mc.start_selenium_server())
                 for i in range(args.threads))
        urls = list(chunks(list(urls), args.threads))
        with ThreadPoolExecutor(max_workers=args.threads) as executor:
            results = [executor.map(func, u) for func, u in zip(funcs, urls)]
            for result in results:
                for r in result:
                    print(r)
